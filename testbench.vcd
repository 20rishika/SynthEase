$date
	Wed Feb 26 01:49:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! out_signal $end
$var reg 16 " A [15:0] $end
$var reg 16 # B [15:0] $end
$var reg 16 $ C [15:0] $end
$var reg 16 % D [15:0] $end
$scope module uut $end
$var wire 16 & A [15:0] $end
$var wire 16 ' B [15:0] $end
$var wire 16 ( C [15:0] $end
$var wire 16 ) D [15:0] $end
$var wire 16 * n1 [15:0] $end
$var wire 16 + n11 [15:0] $end
$var wire 16 , n12 [15:0] $end
$var wire 16 - n2 [15:0] $end
$var wire 1 . n21 $end
$var wire 1 / n22 $end
$var wire 1 0 n23 $end
$var wire 1 ! out_signal $end
$scope module U1 $end
$var wire 1 1 w $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$var wire 1 4 z $end
$upscope $end
$scope module U6 $end
$var wire 1 5 p $end
$var wire 1 6 q $end
$var wire 1 7 r $end
$var wire 1 8 s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
18
07
06
05
04
03
12
11
10
1/
0.
bz1 -
bz1 ,
bz0 +
bz0 *
b1111000000000000 )
b111100000000 (
b11110000 '
b1111 &
b1111000000000000 %
b111100000000 $
b11110000 #
b1111 "
0!
$end
#10000
17
bz1 +
bz1 ,
bz0 *
bz1 -
15
13
02
b0 %
b0 )
b1111111111111111 $
b1111111111111111 (
b101010101010101 #
b101010101010101 '
b1010101010101010 "
b1010101010101010 &
#20000
07
bz0 +
bz1 ,
bz0 *
01
bz0 -
05
03
b1101111011110000 %
b1101111011110000 )
b1001101010111100 $
b1001101010111100 (
b101011001111000 #
b101011001111000 '
b1001000110100 "
b1001000110100 &
#30000
